version: '3.8'

services:
  sqlserver:
    build:
      context: .  # Directory containing Dockerfile.sqlserver
      dockerfile: Dockerfile.sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password1!
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql  # Persistent storage for SQL Server data
      - ./mssql-init:/var/opt/mssql/backup  # Mount the folder containing init.sql and .bak
    command: >
      /bin/bash -c "
      /opt/mssql/bin/sqlservr & 
      sleep 30 && 
      /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password1! -i /var/opt/mssql/backup/init.sql && 
      wait"
    networks:
      - blog-network

  flexyboxblog:
    build:
      context: .  # Root of the solution
      dockerfile: FlexyboxBlog/Dockerfile
    ports:
      - "0.0.0.0:7267:443"  # Ensure this binds to all interfaces
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_Kestrel__Certificates__Default__Password=docker
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/dockercert.pfx
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=BlogPostsDb;User Id=sa;Password=Password1!;TrustServerCertificate=True;
    volumes:
      - datakeys:/root/.aspnet/DataProtection-Keys
    depends_on:
      - sqlserver
    networks:
      - blog-network

  flexyboxrazor:
    build:
      context: .  # Root of the solution
      dockerfile: FlexyboxBlogRazor/FlexyboxBlogRazor/Dockerfile
    ports:
      - "0.0.0.0:7212:443"  # Ensure this binds to all interfaces
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_Kestrel__Certificates__Default__Password=docker
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/dockercert.pfx
    volumes:
      - datakeys:/root/.aspnet/DataProtection-Keys
    depends_on:
      - sqlserver
    networks:
      - blog-network

volumes:
  sqlvolume:
  datakeys:

networks:
  blog-network:
    driver: bridge